// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calc/calc_proto/calc.proto

package calcpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FindMaxRequest struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindMaxRequest) Reset()         { *m = FindMaxRequest{} }
func (m *FindMaxRequest) String() string { return proto.CompactTextString(m) }
func (*FindMaxRequest) ProtoMessage()    {}
func (*FindMaxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62affd3053f75dd3, []int{0}
}

func (m *FindMaxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindMaxRequest.Unmarshal(m, b)
}
func (m *FindMaxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindMaxRequest.Marshal(b, m, deterministic)
}
func (m *FindMaxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindMaxRequest.Merge(m, src)
}
func (m *FindMaxRequest) XXX_Size() int {
	return xxx_messageInfo_FindMaxRequest.Size(m)
}
func (m *FindMaxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindMaxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindMaxRequest proto.InternalMessageInfo

func (m *FindMaxRequest) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type FindMaxResponse struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindMaxResponse) Reset()         { *m = FindMaxResponse{} }
func (m *FindMaxResponse) String() string { return proto.CompactTextString(m) }
func (*FindMaxResponse) ProtoMessage()    {}
func (*FindMaxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62affd3053f75dd3, []int{1}
}

func (m *FindMaxResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindMaxResponse.Unmarshal(m, b)
}
func (m *FindMaxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindMaxResponse.Marshal(b, m, deterministic)
}
func (m *FindMaxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindMaxResponse.Merge(m, src)
}
func (m *FindMaxResponse) XXX_Size() int {
	return xxx_messageInfo_FindMaxResponse.Size(m)
}
func (m *FindMaxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindMaxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindMaxResponse proto.InternalMessageInfo

func (m *FindMaxResponse) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type CalculateAverageRequest struct {
	Number               float64  `protobuf:"fixed64,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculateAverageRequest) Reset()         { *m = CalculateAverageRequest{} }
func (m *CalculateAverageRequest) String() string { return proto.CompactTextString(m) }
func (*CalculateAverageRequest) ProtoMessage()    {}
func (*CalculateAverageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62affd3053f75dd3, []int{2}
}

func (m *CalculateAverageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculateAverageRequest.Unmarshal(m, b)
}
func (m *CalculateAverageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculateAverageRequest.Marshal(b, m, deterministic)
}
func (m *CalculateAverageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculateAverageRequest.Merge(m, src)
}
func (m *CalculateAverageRequest) XXX_Size() int {
	return xxx_messageInfo_CalculateAverageRequest.Size(m)
}
func (m *CalculateAverageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculateAverageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CalculateAverageRequest proto.InternalMessageInfo

func (m *CalculateAverageRequest) GetNumber() float64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type CalculateAverageResponse struct {
	Average              float64  `protobuf:"fixed64,1,opt,name=average,proto3" json:"average,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculateAverageResponse) Reset()         { *m = CalculateAverageResponse{} }
func (m *CalculateAverageResponse) String() string { return proto.CompactTextString(m) }
func (*CalculateAverageResponse) ProtoMessage()    {}
func (*CalculateAverageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62affd3053f75dd3, []int{3}
}

func (m *CalculateAverageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculateAverageResponse.Unmarshal(m, b)
}
func (m *CalculateAverageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculateAverageResponse.Marshal(b, m, deterministic)
}
func (m *CalculateAverageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculateAverageResponse.Merge(m, src)
}
func (m *CalculateAverageResponse) XXX_Size() int {
	return xxx_messageInfo_CalculateAverageResponse.Size(m)
}
func (m *CalculateAverageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculateAverageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CalculateAverageResponse proto.InternalMessageInfo

func (m *CalculateAverageResponse) GetAverage() float64 {
	if m != nil {
		return m.Average
	}
	return 0
}

type CalculateSumRequest struct {
	X                    int64    `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int64    `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculateSumRequest) Reset()         { *m = CalculateSumRequest{} }
func (m *CalculateSumRequest) String() string { return proto.CompactTextString(m) }
func (*CalculateSumRequest) ProtoMessage()    {}
func (*CalculateSumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62affd3053f75dd3, []int{4}
}

func (m *CalculateSumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculateSumRequest.Unmarshal(m, b)
}
func (m *CalculateSumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculateSumRequest.Marshal(b, m, deterministic)
}
func (m *CalculateSumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculateSumRequest.Merge(m, src)
}
func (m *CalculateSumRequest) XXX_Size() int {
	return xxx_messageInfo_CalculateSumRequest.Size(m)
}
func (m *CalculateSumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculateSumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CalculateSumRequest proto.InternalMessageInfo

func (m *CalculateSumRequest) GetX() int64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *CalculateSumRequest) GetY() int64 {
	if m != nil {
		return m.Y
	}
	return 0
}

type CalculateSumResponse struct {
	Result               int64    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculateSumResponse) Reset()         { *m = CalculateSumResponse{} }
func (m *CalculateSumResponse) String() string { return proto.CompactTextString(m) }
func (*CalculateSumResponse) ProtoMessage()    {}
func (*CalculateSumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62affd3053f75dd3, []int{5}
}

func (m *CalculateSumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculateSumResponse.Unmarshal(m, b)
}
func (m *CalculateSumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculateSumResponse.Marshal(b, m, deterministic)
}
func (m *CalculateSumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculateSumResponse.Merge(m, src)
}
func (m *CalculateSumResponse) XXX_Size() int {
	return xxx_messageInfo_CalculateSumResponse.Size(m)
}
func (m *CalculateSumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculateSumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CalculateSumResponse proto.InternalMessageInfo

func (m *CalculateSumResponse) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

type PrimeDecomposeRequest struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeDecomposeRequest) Reset()         { *m = PrimeDecomposeRequest{} }
func (m *PrimeDecomposeRequest) String() string { return proto.CompactTextString(m) }
func (*PrimeDecomposeRequest) ProtoMessage()    {}
func (*PrimeDecomposeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62affd3053f75dd3, []int{6}
}

func (m *PrimeDecomposeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeDecomposeRequest.Unmarshal(m, b)
}
func (m *PrimeDecomposeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeDecomposeRequest.Marshal(b, m, deterministic)
}
func (m *PrimeDecomposeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeDecomposeRequest.Merge(m, src)
}
func (m *PrimeDecomposeRequest) XXX_Size() int {
	return xxx_messageInfo_PrimeDecomposeRequest.Size(m)
}
func (m *PrimeDecomposeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeDecomposeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeDecomposeRequest proto.InternalMessageInfo

func (m *PrimeDecomposeRequest) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type PrimeDecomposeResponse struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeDecomposeResponse) Reset()         { *m = PrimeDecomposeResponse{} }
func (m *PrimeDecomposeResponse) String() string { return proto.CompactTextString(m) }
func (*PrimeDecomposeResponse) ProtoMessage()    {}
func (*PrimeDecomposeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62affd3053f75dd3, []int{7}
}

func (m *PrimeDecomposeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeDecomposeResponse.Unmarshal(m, b)
}
func (m *PrimeDecomposeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeDecomposeResponse.Marshal(b, m, deterministic)
}
func (m *PrimeDecomposeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeDecomposeResponse.Merge(m, src)
}
func (m *PrimeDecomposeResponse) XXX_Size() int {
	return xxx_messageInfo_PrimeDecomposeResponse.Size(m)
}
func (m *PrimeDecomposeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeDecomposeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeDecomposeResponse proto.InternalMessageInfo

func (m *PrimeDecomposeResponse) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type SquareRootRequest struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareRootRequest) Reset()         { *m = SquareRootRequest{} }
func (m *SquareRootRequest) String() string { return proto.CompactTextString(m) }
func (*SquareRootRequest) ProtoMessage()    {}
func (*SquareRootRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62affd3053f75dd3, []int{8}
}

func (m *SquareRootRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareRootRequest.Unmarshal(m, b)
}
func (m *SquareRootRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareRootRequest.Marshal(b, m, deterministic)
}
func (m *SquareRootRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareRootRequest.Merge(m, src)
}
func (m *SquareRootRequest) XXX_Size() int {
	return xxx_messageInfo_SquareRootRequest.Size(m)
}
func (m *SquareRootRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareRootRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SquareRootRequest proto.InternalMessageInfo

func (m *SquareRootRequest) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type SquareRootResponse struct {
	Result               float64  `protobuf:"fixed64,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareRootResponse) Reset()         { *m = SquareRootResponse{} }
func (m *SquareRootResponse) String() string { return proto.CompactTextString(m) }
func (*SquareRootResponse) ProtoMessage()    {}
func (*SquareRootResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62affd3053f75dd3, []int{9}
}

func (m *SquareRootResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareRootResponse.Unmarshal(m, b)
}
func (m *SquareRootResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareRootResponse.Marshal(b, m, deterministic)
}
func (m *SquareRootResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareRootResponse.Merge(m, src)
}
func (m *SquareRootResponse) XXX_Size() int {
	return xxx_messageInfo_SquareRootResponse.Size(m)
}
func (m *SquareRootResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareRootResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SquareRootResponse proto.InternalMessageInfo

func (m *SquareRootResponse) GetResult() float64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*FindMaxRequest)(nil), "calc.FindMaxRequest")
	proto.RegisterType((*FindMaxResponse)(nil), "calc.FindMaxResponse")
	proto.RegisterType((*CalculateAverageRequest)(nil), "calc.CalculateAverageRequest")
	proto.RegisterType((*CalculateAverageResponse)(nil), "calc.CalculateAverageResponse")
	proto.RegisterType((*CalculateSumRequest)(nil), "calc.CalculateSumRequest")
	proto.RegisterType((*CalculateSumResponse)(nil), "calc.CalculateSumResponse")
	proto.RegisterType((*PrimeDecomposeRequest)(nil), "calc.PrimeDecomposeRequest")
	proto.RegisterType((*PrimeDecomposeResponse)(nil), "calc.PrimeDecomposeResponse")
	proto.RegisterType((*SquareRootRequest)(nil), "calc.SquareRootRequest")
	proto.RegisterType((*SquareRootResponse)(nil), "calc.SquareRootResponse")
}

func init() { proto.RegisterFile("calc/calc_proto/calc.proto", fileDescriptor_62affd3053f75dd3) }

var fileDescriptor_62affd3053f75dd3 = []byte{
	// 401 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xcb, 0x4e, 0xea, 0x40,
	0x18, 0x3e, 0x03, 0x27, 0x40, 0xfe, 0x70, 0x38, 0x3a, 0xdc, 0xea, 0x88, 0xc6, 0x74, 0x85, 0x97,
	0x50, 0x50, 0x57, 0xc6, 0x0d, 0x6a, 0xdc, 0x19, 0x0d, 0xc4, 0x0d, 0x1b, 0x33, 0xd4, 0x09, 0x69,
	0xd2, 0x76, 0x4a, 0x2f, 0x04, 0xb6, 0xbe, 0x81, 0xf1, 0xd1, 0x7c, 0x05, 0x1f, 0xc4, 0xb4, 0xd3,
	0x01, 0x5a, 0x4a, 0xd8, 0x34, 0xf3, 0xcf, 0xff, 0x7d, 0xff, 0xe5, 0xeb, 0x37, 0x40, 0x74, 0x6a,
	0xea, 0x5a, 0xf8, 0x79, 0x73, 0x5c, 0xee, 0xf3, 0xe8, 0xd8, 0x89, 0x8e, 0xf8, 0x6f, 0x78, 0x26,
	0xad, 0x09, 0xe7, 0x13, 0x93, 0x69, 0xd4, 0x31, 0x34, 0x6a, 0xdb, 0xdc, 0xa7, 0xbe, 0xc1, 0x6d,
	0x4f, 0x60, 0xd4, 0x36, 0x54, 0x1e, 0x0d, 0xfb, 0xfd, 0x89, 0xce, 0x07, 0x6c, 0x1a, 0x30, 0xcf,
	0xc7, 0x0d, 0x28, 0xd8, 0x81, 0x35, 0x66, 0xae, 0x82, 0x4e, 0x50, 0x3b, 0x3f, 0x88, 0x23, 0xf5,
	0x14, 0xfe, 0x2f, 0x91, 0x9e, 0xc3, 0x6d, 0x8f, 0x6d, 0x85, 0xf6, 0xa0, 0x79, 0x4f, 0x4d, 0x3d,
	0x30, 0xa9, 0xcf, 0xfa, 0x33, 0xe6, 0xd2, 0x09, 0xcb, 0xae, 0x8e, 0x96, 0x94, 0x6b, 0x50, 0x36,
	0x29, 0x71, 0x1b, 0x05, 0x8a, 0x54, 0x5c, 0xc5, 0x24, 0x19, 0xaa, 0x3d, 0xa8, 0x2e, 0x59, 0xc3,
	0xc0, 0x92, 0x4d, 0xca, 0x80, 0xe6, 0xf1, 0x48, 0x68, 0x1e, 0x46, 0x0b, 0x25, 0x27, 0xa2, 0x85,
	0xda, 0x81, 0x5a, 0x92, 0xb2, 0xda, 0xc5, 0x65, 0x5e, 0x60, 0xfa, 0x72, 0x17, 0x11, 0xa9, 0x1a,
	0xd4, 0x5f, 0x5c, 0xc3, 0x62, 0x0f, 0x4c, 0xe7, 0x96, 0xc3, 0x3d, 0xb6, 0x4b, 0xa7, 0x2e, 0x34,
	0xd2, 0x84, 0x1d, 0x72, 0x9d, 0xc3, 0xfe, 0x70, 0x1a, 0x50, 0x97, 0x0d, 0x38, 0xf7, 0x77, 0x95,
	0xbf, 0x00, 0xbc, 0x0e, 0xce, 0x9c, 0x1e, 0xc9, 0xe9, 0x2f, 0x3f, 0xf3, 0x00, 0x72, 0x5d, 0xee,
	0xe2, 0x11, 0x94, 0xd7, 0x97, 0xc7, 0x07, 0x9d, 0xc8, 0x2e, 0x19, 0x1a, 0x12, 0x92, 0x95, 0x12,
	0xdd, 0xd4, 0xea, 0xc7, 0xf7, 0xcf, 0x57, 0xee, 0x9f, 0x5a, 0xd2, 0x66, 0xbd, 0xc8, 0x70, 0x37,
	0xe8, 0x0c, 0x3f, 0x43, 0x25, 0xb9, 0x37, 0x3e, 0x14, 0x25, 0x32, 0xe5, 0x23, 0xad, 0xec, 0x64,
	0xdc, 0xe1, 0x4f, 0x17, 0xe1, 0x57, 0xd8, 0x4b, 0x5b, 0x02, 0x1f, 0xa5, 0xa6, 0x4a, 0xba, 0x8b,
	0x1c, 0x6f, 0x4b, 0xcb, 0xb2, 0x6d, 0x84, 0x6f, 0xa1, 0x18, 0xfb, 0x18, 0xd7, 0x04, 0x3c, 0xf9,
	0x00, 0x48, 0x3d, 0x75, 0xbb, 0xe2, 0x76, 0x11, 0xee, 0x03, 0xac, 0xe4, 0xc7, 0x4d, 0x01, 0xdd,
	0xf8, 0x7b, 0x44, 0xd9, 0x4c, 0xc8, 0x32, 0x77, 0xa5, 0x51, 0x21, 0x4c, 0x3a, 0xe3, 0x71, 0x21,
	0x7a, 0x83, 0x57, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x90, 0xd8, 0x24, 0x85, 0xc5, 0x03, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalculatorClient is the client API for Calculator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorClient interface {
	// Unary
	CalculateSum(ctx context.Context, in *CalculateSumRequest, opts ...grpc.CallOption) (*CalculateSumResponse, error)
	// Server stream
	PrimeDecompose(ctx context.Context, in *PrimeDecomposeRequest, opts ...grpc.CallOption) (Calculator_PrimeDecomposeClient, error)
	// Client stream
	CalculateAverage(ctx context.Context, opts ...grpc.CallOption) (Calculator_CalculateAverageClient, error)
	// Bi-directional stream
	FindMax(ctx context.Context, opts ...grpc.CallOption) (Calculator_FindMaxClient, error)
	// Calculates the square root of a given number.
	//
	// error handling
	// This RPC will throw INVALID_ARGUMENT if the number in the request is
	// negative.
	SquareRoot(ctx context.Context, in *SquareRootRequest, opts ...grpc.CallOption) (*SquareRootResponse, error)
}

type calculatorClient struct {
	cc *grpc.ClientConn
}

func NewCalculatorClient(cc *grpc.ClientConn) CalculatorClient {
	return &calculatorClient{cc}
}

func (c *calculatorClient) CalculateSum(ctx context.Context, in *CalculateSumRequest, opts ...grpc.CallOption) (*CalculateSumResponse, error) {
	out := new(CalculateSumResponse)
	err := c.cc.Invoke(ctx, "/calc.Calculator/CalculateSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorClient) PrimeDecompose(ctx context.Context, in *PrimeDecomposeRequest, opts ...grpc.CallOption) (Calculator_PrimeDecomposeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Calculator_serviceDesc.Streams[0], "/calc.Calculator/PrimeDecompose", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorPrimeDecomposeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Calculator_PrimeDecomposeClient interface {
	Recv() (*PrimeDecomposeResponse, error)
	grpc.ClientStream
}

type calculatorPrimeDecomposeClient struct {
	grpc.ClientStream
}

func (x *calculatorPrimeDecomposeClient) Recv() (*PrimeDecomposeResponse, error) {
	m := new(PrimeDecomposeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorClient) CalculateAverage(ctx context.Context, opts ...grpc.CallOption) (Calculator_CalculateAverageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Calculator_serviceDesc.Streams[1], "/calc.Calculator/CalculateAverage", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorCalculateAverageClient{stream}
	return x, nil
}

type Calculator_CalculateAverageClient interface {
	Send(*CalculateAverageRequest) error
	CloseAndRecv() (*CalculateAverageResponse, error)
	grpc.ClientStream
}

type calculatorCalculateAverageClient struct {
	grpc.ClientStream
}

func (x *calculatorCalculateAverageClient) Send(m *CalculateAverageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculatorCalculateAverageClient) CloseAndRecv() (*CalculateAverageResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(CalculateAverageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorClient) FindMax(ctx context.Context, opts ...grpc.CallOption) (Calculator_FindMaxClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Calculator_serviceDesc.Streams[2], "/calc.Calculator/FindMax", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorFindMaxClient{stream}
	return x, nil
}

type Calculator_FindMaxClient interface {
	Send(*FindMaxRequest) error
	Recv() (*FindMaxResponse, error)
	grpc.ClientStream
}

type calculatorFindMaxClient struct {
	grpc.ClientStream
}

func (x *calculatorFindMaxClient) Send(m *FindMaxRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculatorFindMaxClient) Recv() (*FindMaxResponse, error) {
	m := new(FindMaxResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorClient) SquareRoot(ctx context.Context, in *SquareRootRequest, opts ...grpc.CallOption) (*SquareRootResponse, error) {
	out := new(SquareRootResponse)
	err := c.cc.Invoke(ctx, "/calc.Calculator/SquareRoot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalculatorServer is the server API for Calculator service.
type CalculatorServer interface {
	// Unary
	CalculateSum(context.Context, *CalculateSumRequest) (*CalculateSumResponse, error)
	// Server stream
	PrimeDecompose(*PrimeDecomposeRequest, Calculator_PrimeDecomposeServer) error
	// Client stream
	CalculateAverage(Calculator_CalculateAverageServer) error
	// Bi-directional stream
	FindMax(Calculator_FindMaxServer) error
	// Calculates the square root of a given number.
	//
	// error handling
	// This RPC will throw INVALID_ARGUMENT if the number in the request is
	// negative.
	SquareRoot(context.Context, *SquareRootRequest) (*SquareRootResponse, error)
}

// UnimplementedCalculatorServer can be embedded to have forward compatible implementations.
type UnimplementedCalculatorServer struct {
}

func (*UnimplementedCalculatorServer) CalculateSum(ctx context.Context, req *CalculateSumRequest) (*CalculateSumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CalculateSum not implemented")
}
func (*UnimplementedCalculatorServer) PrimeDecompose(req *PrimeDecomposeRequest, srv Calculator_PrimeDecomposeServer) error {
	return status.Errorf(codes.Unimplemented, "method PrimeDecompose not implemented")
}
func (*UnimplementedCalculatorServer) CalculateAverage(srv Calculator_CalculateAverageServer) error {
	return status.Errorf(codes.Unimplemented, "method CalculateAverage not implemented")
}
func (*UnimplementedCalculatorServer) FindMax(srv Calculator_FindMaxServer) error {
	return status.Errorf(codes.Unimplemented, "method FindMax not implemented")
}
func (*UnimplementedCalculatorServer) SquareRoot(ctx context.Context, req *SquareRootRequest) (*SquareRootResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SquareRoot not implemented")
}

func RegisterCalculatorServer(s *grpc.Server, srv CalculatorServer) {
	s.RegisterService(&_Calculator_serviceDesc, srv)
}

func _Calculator_CalculateSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalculateSumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServer).CalculateSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calc.Calculator/CalculateSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServer).CalculateSum(ctx, req.(*CalculateSumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calculator_PrimeDecompose_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeDecomposeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalculatorServer).PrimeDecompose(m, &calculatorPrimeDecomposeServer{stream})
}

type Calculator_PrimeDecomposeServer interface {
	Send(*PrimeDecomposeResponse) error
	grpc.ServerStream
}

type calculatorPrimeDecomposeServer struct {
	grpc.ServerStream
}

func (x *calculatorPrimeDecomposeServer) Send(m *PrimeDecomposeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Calculator_CalculateAverage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculatorServer).CalculateAverage(&calculatorCalculateAverageServer{stream})
}

type Calculator_CalculateAverageServer interface {
	SendAndClose(*CalculateAverageResponse) error
	Recv() (*CalculateAverageRequest, error)
	grpc.ServerStream
}

type calculatorCalculateAverageServer struct {
	grpc.ServerStream
}

func (x *calculatorCalculateAverageServer) SendAndClose(m *CalculateAverageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculatorCalculateAverageServer) Recv() (*CalculateAverageRequest, error) {
	m := new(CalculateAverageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Calculator_FindMax_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculatorServer).FindMax(&calculatorFindMaxServer{stream})
}

type Calculator_FindMaxServer interface {
	Send(*FindMaxResponse) error
	Recv() (*FindMaxRequest, error)
	grpc.ServerStream
}

type calculatorFindMaxServer struct {
	grpc.ServerStream
}

func (x *calculatorFindMaxServer) Send(m *FindMaxResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculatorFindMaxServer) Recv() (*FindMaxRequest, error) {
	m := new(FindMaxRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Calculator_SquareRoot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SquareRootRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServer).SquareRoot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calc.Calculator/SquareRoot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServer).SquareRoot(ctx, req.(*SquareRootRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Calculator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calc.Calculator",
	HandlerType: (*CalculatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CalculateSum",
			Handler:    _Calculator_CalculateSum_Handler,
		},
		{
			MethodName: "SquareRoot",
			Handler:    _Calculator_SquareRoot_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeDecompose",
			Handler:       _Calculator_PrimeDecompose_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CalculateAverage",
			Handler:       _Calculator_CalculateAverage_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "FindMax",
			Handler:       _Calculator_FindMax_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "calc/calc_proto/calc.proto",
}
